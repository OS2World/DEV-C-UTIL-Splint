

Terminals which are not used:

   LST_EOL
   LST_COMMENTSYM
   LST_WHITESPACE
   LST_QUANTIFIERSYM
   LST_EQUATIONSYM
   LST_EQSEPSYM
   LST_COMPOSESYM
   LST_LPAR
   LST_RPAR
   LST_assertsTOKEN
   LST_assumesTOKEN
   LST_byTOKEN
   LST_convertsTOKEN
   LST_enumerationTOKEN
   LST_equationsTOKEN
   LST_exemptingTOKEN
   LST_forTOKEN
   LST_generatedTOKEN
   LST_impliesTOKEN
   LST_includesTOKEN
   LST_introducesTOKEN
   LST_ofTOKEN
   LST_partitionedTOKEN
   LST_traitTOKEN
   LST_tupleTOKEN
   LST_unionTOKEN
   LST_BADTOKEN



Grammar
rule 1    top -> operatorList
rule 2    operatorList -> operator
rule 3    operatorList -> operatorList operator
rule 4    operator -> name LST_COLON signature
rule 5    name -> opId
rule 6    name -> opForm
rule 7    opForm -> LST_ifTOKEN LST_MARKERSYM LST_thenTOKEN LST_MARKERSYM LST_elseTOKEN LST_MARKERSYM
rule 8    opForm -> anyOp
rule 9    opForm -> LST_MARKERSYM anyOp
rule 10   opForm -> anyOp LST_MARKERSYM
rule 11   opForm -> LST_MARKERSYM anyOp LST_MARKERSYM
rule 12   opForm -> LST_OPENSYM middle LST_CLOSESYM
rule 13   opForm -> LST_MARKERSYM LST_OPENSYM middle LST_CLOSESYM
rule 14   opForm -> LST_OPENSYM middle LST_CLOSESYM LST_MARKERSYM
rule 15   opForm -> LST_MARKERSYM LST_OPENSYM middle LST_CLOSESYM LST_MARKERSYM
rule 16   opForm -> LST_LBRACKET middle LST_RBRACKET
rule 17   opForm -> LST_MARKERSYM LST_LBRACKET middle LST_RBRACKET
rule 18   opForm -> LST_LBRACKET middle LST_RBRACKET LST_MARKERSYM
rule 19   opForm -> LST_MARKERSYM LST_LBRACKET middle LST_RBRACKET LST_MARKERSYM
rule 20   opForm -> LST_SELECTSYM LST_SIMPLEID
rule 21   opForm -> LST_MARKERSYM LST_SELECTSYM LST_SIMPLEID
rule 22   opForm -> LST_MARKERSYM LST_FIELDMAPSYM LST_SIMPLEID
rule 23   anyOp -> LST_SIMPLEOP
rule 24   anyOp -> LST_LOGICALOP
rule 25   anyOp -> LST_EQOP
rule 26   middle ->		/* empty */
rule 27   middle -> placeList
rule 28   placeList -> LST_MARKERSYM
rule 29   placeList -> placeList separator LST_MARKERSYM
rule 30   separator -> LST_COMMA
rule 31   separator -> LST_SEPSYM
rule 32   signature -> domain LST_MAPSYM sortId
rule 33   domain ->		/* empty */
rule 34   domain -> sortList
rule 35   sortList -> sortId
rule 36   sortList -> sortList LST_COMMA sortId
rule 37   sortId -> LST_SIMPLEID
rule 38   opId -> LST_SIMPLEID

Terminals, with rules where they appear

$ (-1)
error (256)
LST_SIMPLEID (257) 20 21 22 37 38
LST_LOGICALOP (258) 24
LST_EQOP (259) 25
LST_SIMPLEOP (260) 23
LST_MAPSYM (261) 32
LST_FIELDMAPSYM (262) 22
LST_MARKERSYM (263) 7 9 10 11 13 14 15 17 18 19 21 22 28 29
LST_ifTOKEN (264) 7
LST_thenTOKEN (265) 7
LST_elseTOKEN (266) 7
LST_LBRACKET (267) 16 17 18 19
LST_RBRACKET (268) 16 17 18 19
LST_SELECTSYM (269) 20 21
LST_SEPSYM (270) 31
LST_OPENSYM (271) 12 13 14 15
LST_CLOSESYM (272) 12 13 14 15
LST_COLON (273) 4
LST_COMMA (274) 30 36
LST_EOL (275)
LST_COMMENTSYM (276)
LST_WHITESPACE (277)
LST_QUANTIFIERSYM (278)
LST_EQUATIONSYM (279)
LST_EQSEPSYM (280)
LST_COMPOSESYM (281)
LST_LPAR (282)
LST_RPAR (283)
LST_assertsTOKEN (284)
LST_assumesTOKEN (285)
LST_byTOKEN (286)
LST_convertsTOKEN (287)
LST_enumerationTOKEN (288)
LST_equationsTOKEN (289)
LST_exemptingTOKEN (290)
LST_forTOKEN (291)
LST_generatedTOKEN (292)
LST_impliesTOKEN (293)
LST_includesTOKEN (294)
LST_introducesTOKEN (295)
LST_ofTOKEN (296)
LST_partitionedTOKEN (297)
LST_traitTOKEN (298)
LST_tupleTOKEN (299)
LST_unionTOKEN (300)
LST_BADTOKEN (301)

Nonterminals, with rules where they appear

top (48)
    on left: 1
operatorList (49)
    on left: 2 3, on right: 1 3
operator (50)
    on left: 4, on right: 2 3
name (51)
    on left: 5 6, on right: 4
opForm (52)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22,
    on right: 6
anyOp (53)
    on left: 23 24 25, on right: 8 9 10 11
middle (54)
    on left: 26 27, on right: 12 13 14 15 16 17 18 19
placeList (55)
    on left: 28 29, on right: 27 29
separator (56)
    on left: 30 31, on right: 29
signature (57)
    on left: 32, on right: 4
domain (58)
    on left: 33 34, on right: 32
sortList (59)
    on left: 35 36, on right: 34 36
sortId (60)
    on left: 37, on right: 32 35 36
opId (61)
    on left: 38, on right: 5


state 0

    LST_SIMPLEID	shift, and go to state 1
    LST_LOGICALOP	shift, and go to state 2
    LST_EQOP	shift, and go to state 3
    LST_SIMPLEOP	shift, and go to state 4
    LST_MARKERSYM	shift, and go to state 5
    LST_ifTOKEN	shift, and go to state 6
    LST_LBRACKET	shift, and go to state 7
    LST_SELECTSYM	shift, and go to state 8
    LST_OPENSYM	shift, and go to state 9

    top 	go to state 60
    operatorList	go to state 10
    operator	go to state 11
    name	go to state 12
    opForm	go to state 13
    anyOp	go to state 14
    opId	go to state 15



state 1

    opId  ->  LST_SIMPLEID .   (rule 38)

    $default	reduce using rule 38 (opId)



state 2

    anyOp  ->  LST_LOGICALOP .   (rule 24)

    $default	reduce using rule 24 (anyOp)



state 3

    anyOp  ->  LST_EQOP .   (rule 25)

    $default	reduce using rule 25 (anyOp)



state 4

    anyOp  ->  LST_SIMPLEOP .   (rule 23)

    $default	reduce using rule 23 (anyOp)



state 5

    opForm  ->  LST_MARKERSYM . anyOp   (rule 9)
    opForm  ->  LST_MARKERSYM . anyOp LST_MARKERSYM   (rule 11)
    opForm  ->  LST_MARKERSYM . LST_OPENSYM middle LST_CLOSESYM   (rule 13)
    opForm  ->  LST_MARKERSYM . LST_OPENSYM middle LST_CLOSESYM LST_MARKERSYM   (rule 15)
    opForm  ->  LST_MARKERSYM . LST_LBRACKET middle LST_RBRACKET   (rule 17)
    opForm  ->  LST_MARKERSYM . LST_LBRACKET middle LST_RBRACKET LST_MARKERSYM   (rule 19)
    opForm  ->  LST_MARKERSYM . LST_SELECTSYM LST_SIMPLEID   (rule 21)
    opForm  ->  LST_MARKERSYM . LST_FIELDMAPSYM LST_SIMPLEID   (rule 22)

    LST_LOGICALOP	shift, and go to state 2
    LST_EQOP	shift, and go to state 3
    LST_SIMPLEOP	shift, and go to state 4
    LST_FIELDMAPSYM	shift, and go to state 16
    LST_LBRACKET	shift, and go to state 17
    LST_SELECTSYM	shift, and go to state 18
    LST_OPENSYM	shift, and go to state 19

    anyOp	go to state 20



state 6

    opForm  ->  LST_ifTOKEN . LST_MARKERSYM LST_thenTOKEN LST_MARKERSYM LST_elseTOKEN LST_MARKERSYM   (rule 7)

    LST_MARKERSYM	shift, and go to state 21



state 7

    opForm  ->  LST_LBRACKET . middle LST_RBRACKET   (rule 16)
    opForm  ->  LST_LBRACKET . middle LST_RBRACKET LST_MARKERSYM   (rule 18)

    LST_MARKERSYM	shift, and go to state 22

    $default	reduce using rule 26 (middle)

    middle	go to state 23
    placeList	go to state 24



state 8

    opForm  ->  LST_SELECTSYM . LST_SIMPLEID   (rule 20)

    LST_SIMPLEID	shift, and go to state 25



state 9

    opForm  ->  LST_OPENSYM . middle LST_CLOSESYM   (rule 12)
    opForm  ->  LST_OPENSYM . middle LST_CLOSESYM LST_MARKERSYM   (rule 14)

    LST_MARKERSYM	shift, and go to state 22

    $default	reduce using rule 26 (middle)

    middle	go to state 26
    placeList	go to state 24



state 10

    top  ->  operatorList .   (rule 1)
    operatorList  ->  operatorList . operator   (rule 3)

    LST_SIMPLEID	shift, and go to state 1
    LST_LOGICALOP	shift, and go to state 2
    LST_EQOP	shift, and go to state 3
    LST_SIMPLEOP	shift, and go to state 4
    LST_MARKERSYM	shift, and go to state 5
    LST_ifTOKEN	shift, and go to state 6
    LST_LBRACKET	shift, and go to state 7
    LST_SELECTSYM	shift, and go to state 8
    LST_OPENSYM	shift, and go to state 9

    $default	reduce using rule 1 (top)

    operator	go to state 27
    name	go to state 12
    opForm	go to state 13
    anyOp	go to state 14
    opId	go to state 15



state 11

    operatorList  ->  operator .   (rule 2)

    $default	reduce using rule 2 (operatorList)



state 12

    operator  ->  name . LST_COLON signature   (rule 4)

    LST_COLON	shift, and go to state 28



state 13

    name  ->  opForm .   (rule 6)

    $default	reduce using rule 6 (name)



state 14

    opForm  ->  anyOp .   (rule 8)
    opForm  ->  anyOp . LST_MARKERSYM   (rule 10)

    LST_MARKERSYM	shift, and go to state 29

    $default	reduce using rule 8 (opForm)



state 15

    name  ->  opId .   (rule 5)

    $default	reduce using rule 5 (name)



state 16

    opForm  ->  LST_MARKERSYM LST_FIELDMAPSYM . LST_SIMPLEID   (rule 22)

    LST_SIMPLEID	shift, and go to state 30



state 17

    opForm  ->  LST_MARKERSYM LST_LBRACKET . middle LST_RBRACKET   (rule 17)
    opForm  ->  LST_MARKERSYM LST_LBRACKET . middle LST_RBRACKET LST_MARKERSYM   (rule 19)

    LST_MARKERSYM	shift, and go to state 22

    $default	reduce using rule 26 (middle)

    middle	go to state 31
    placeList	go to state 24



state 18

    opForm  ->  LST_MARKERSYM LST_SELECTSYM . LST_SIMPLEID   (rule 21)

    LST_SIMPLEID	shift, and go to state 32



state 19

    opForm  ->  LST_MARKERSYM LST_OPENSYM . middle LST_CLOSESYM   (rule 13)
    opForm  ->  LST_MARKERSYM LST_OPENSYM . middle LST_CLOSESYM LST_MARKERSYM   (rule 15)

    LST_MARKERSYM	shift, and go to state 22

    $default	reduce using rule 26 (middle)

    middle	go to state 33
    placeList	go to state 24



state 20

    opForm  ->  LST_MARKERSYM anyOp .   (rule 9)
    opForm  ->  LST_MARKERSYM anyOp . LST_MARKERSYM   (rule 11)

    LST_MARKERSYM	shift, and go to state 34

    $default	reduce using rule 9 (opForm)



state 21

    opForm  ->  LST_ifTOKEN LST_MARKERSYM . LST_thenTOKEN LST_MARKERSYM LST_elseTOKEN LST_MARKERSYM   (rule 7)

    LST_thenTOKEN	shift, and go to state 35



state 22

    placeList  ->  LST_MARKERSYM .   (rule 28)

    $default	reduce using rule 28 (placeList)



state 23

    opForm  ->  LST_LBRACKET middle . LST_RBRACKET   (rule 16)
    opForm  ->  LST_LBRACKET middle . LST_RBRACKET LST_MARKERSYM   (rule 18)

    LST_RBRACKET	shift, and go to state 36



state 24

    middle  ->  placeList .   (rule 27)
    placeList  ->  placeList . separator LST_MARKERSYM   (rule 29)

    LST_SEPSYM	shift, and go to state 37
    LST_COMMA	shift, and go to state 38

    $default	reduce using rule 27 (middle)

    separator	go to state 39



state 25

    opForm  ->  LST_SELECTSYM LST_SIMPLEID .   (rule 20)

    $default	reduce using rule 20 (opForm)



state 26

    opForm  ->  LST_OPENSYM middle . LST_CLOSESYM   (rule 12)
    opForm  ->  LST_OPENSYM middle . LST_CLOSESYM LST_MARKERSYM   (rule 14)

    LST_CLOSESYM	shift, and go to state 40



state 27

    operatorList  ->  operatorList operator .   (rule 3)

    $default	reduce using rule 3 (operatorList)



state 28

    operator  ->  name LST_COLON . signature   (rule 4)

    LST_SIMPLEID	shift, and go to state 41

    $default	reduce using rule 33 (domain)

    signature	go to state 42
    domain	go to state 43
    sortList	go to state 44
    sortId	go to state 45



state 29

    opForm  ->  anyOp LST_MARKERSYM .   (rule 10)

    $default	reduce using rule 10 (opForm)



state 30

    opForm  ->  LST_MARKERSYM LST_FIELDMAPSYM LST_SIMPLEID .   (rule 22)

    $default	reduce using rule 22 (opForm)



state 31

    opForm  ->  LST_MARKERSYM LST_LBRACKET middle . LST_RBRACKET   (rule 17)
    opForm  ->  LST_MARKERSYM LST_LBRACKET middle . LST_RBRACKET LST_MARKERSYM   (rule 19)

    LST_RBRACKET	shift, and go to state 46



state 32

    opForm  ->  LST_MARKERSYM LST_SELECTSYM LST_SIMPLEID .   (rule 21)

    $default	reduce using rule 21 (opForm)



state 33

    opForm  ->  LST_MARKERSYM LST_OPENSYM middle . LST_CLOSESYM   (rule 13)
    opForm  ->  LST_MARKERSYM LST_OPENSYM middle . LST_CLOSESYM LST_MARKERSYM   (rule 15)

    LST_CLOSESYM	shift, and go to state 47



state 34

    opForm  ->  LST_MARKERSYM anyOp LST_MARKERSYM .   (rule 11)

    $default	reduce using rule 11 (opForm)



state 35

    opForm  ->  LST_ifTOKEN LST_MARKERSYM LST_thenTOKEN . LST_MARKERSYM LST_elseTOKEN LST_MARKERSYM   (rule 7)

    LST_MARKERSYM	shift, and go to state 48



state 36

    opForm  ->  LST_LBRACKET middle LST_RBRACKET .   (rule 16)
    opForm  ->  LST_LBRACKET middle LST_RBRACKET . LST_MARKERSYM   (rule 18)

    LST_MARKERSYM	shift, and go to state 49

    $default	reduce using rule 16 (opForm)



state 37

    separator  ->  LST_SEPSYM .   (rule 31)

    $default	reduce using rule 31 (separator)



state 38

    separator  ->  LST_COMMA .   (rule 30)

    $default	reduce using rule 30 (separator)



state 39

    placeList  ->  placeList separator . LST_MARKERSYM   (rule 29)

    LST_MARKERSYM	shift, and go to state 50



state 40

    opForm  ->  LST_OPENSYM middle LST_CLOSESYM .   (rule 12)
    opForm  ->  LST_OPENSYM middle LST_CLOSESYM . LST_MARKERSYM   (rule 14)

    LST_MARKERSYM	shift, and go to state 51

    $default	reduce using rule 12 (opForm)



state 41

    sortId  ->  LST_SIMPLEID .   (rule 37)

    $default	reduce using rule 37 (sortId)



state 42

    operator  ->  name LST_COLON signature .   (rule 4)

    $default	reduce using rule 4 (operator)



state 43

    signature  ->  domain . LST_MAPSYM sortId   (rule 32)

    LST_MAPSYM	shift, and go to state 52



state 44

    domain  ->  sortList .   (rule 34)
    sortList  ->  sortList . LST_COMMA sortId   (rule 36)

    LST_COMMA	shift, and go to state 53

    $default	reduce using rule 34 (domain)



state 45

    sortList  ->  sortId .   (rule 35)

    $default	reduce using rule 35 (sortList)



state 46

    opForm  ->  LST_MARKERSYM LST_LBRACKET middle LST_RBRACKET .   (rule 17)
    opForm  ->  LST_MARKERSYM LST_LBRACKET middle LST_RBRACKET . LST_MARKERSYM   (rule 19)

    LST_MARKERSYM	shift, and go to state 54

    $default	reduce using rule 17 (opForm)



state 47

    opForm  ->  LST_MARKERSYM LST_OPENSYM middle LST_CLOSESYM .   (rule 13)
    opForm  ->  LST_MARKERSYM LST_OPENSYM middle LST_CLOSESYM . LST_MARKERSYM   (rule 15)

    LST_MARKERSYM	shift, and go to state 55

    $default	reduce using rule 13 (opForm)



state 48

    opForm  ->  LST_ifTOKEN LST_MARKERSYM LST_thenTOKEN LST_MARKERSYM . LST_elseTOKEN LST_MARKERSYM   (rule 7)

    LST_elseTOKEN	shift, and go to state 56



state 49

    opForm  ->  LST_LBRACKET middle LST_RBRACKET LST_MARKERSYM .   (rule 18)

    $default	reduce using rule 18 (opForm)



state 50

    placeList  ->  placeList separator LST_MARKERSYM .   (rule 29)

    $default	reduce using rule 29 (placeList)



state 51

    opForm  ->  LST_OPENSYM middle LST_CLOSESYM LST_MARKERSYM .   (rule 14)

    $default	reduce using rule 14 (opForm)



state 52

    signature  ->  domain LST_MAPSYM . sortId   (rule 32)

    LST_SIMPLEID	shift, and go to state 41

    sortId	go to state 57



state 53

    sortList  ->  sortList LST_COMMA . sortId   (rule 36)

    LST_SIMPLEID	shift, and go to state 41

    sortId	go to state 58



state 54

    opForm  ->  LST_MARKERSYM LST_LBRACKET middle LST_RBRACKET LST_MARKERSYM .   (rule 19)

    $default	reduce using rule 19 (opForm)



state 55

    opForm  ->  LST_MARKERSYM LST_OPENSYM middle LST_CLOSESYM LST_MARKERSYM .   (rule 15)

    $default	reduce using rule 15 (opForm)



state 56

    opForm  ->  LST_ifTOKEN LST_MARKERSYM LST_thenTOKEN LST_MARKERSYM LST_elseTOKEN . LST_MARKERSYM   (rule 7)

    LST_MARKERSYM	shift, and go to state 59



state 57

    signature  ->  domain LST_MAPSYM sortId .   (rule 32)

    $default	reduce using rule 32 (signature)



state 58

    sortList  ->  sortList LST_COMMA sortId .   (rule 36)

    $default	reduce using rule 36 (sortList)



state 59

    opForm  ->  LST_ifTOKEN LST_MARKERSYM LST_thenTOKEN LST_MARKERSYM LST_elseTOKEN LST_MARKERSYM .   (rule 7)

    $default	reduce using rule 7 (opForm)



state 60

    $   	go to state 61



state 61

    $   	go to state 62



state 62

    $default	accept
